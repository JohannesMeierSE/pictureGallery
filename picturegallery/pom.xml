<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>picturegallery</groupId>
	<artifactId>picturegallery</artifactId>
	<name>picturegallery</name>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>

	<organization>
		<!-- Used as the 'Vendor' for JNLP generation -->
		<name>privateOrganization</name>
	</organization>

	<properties>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<javafx.version>23</javafx.version> <!-- previously used versions: 18.0.2, 19 -->
		<apache.tika.version>2.4.1</apache.tika.version> <!-- previously used versions: 1.27 -->
		<project.name>pictureGallery</project.name>
	</properties>

	<build>
		<finalName>${project.name}</finalName>
		<!-- https://stackoverflow.com/questions/270445/maven-compile-with-multiple-src-directories -->
		<sourceDirectory>src/main/java/, src-gen/main/java/</sourceDirectory>

		<plugins>

			<!-- to handle several source directories: https://stackoverflow.com/questions/7071470/maven-does-not-add-classpath-to-eclipse-project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/java</source>
								<source>src-gen/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
			Run project via terminal: mvn clean javafx:run
			https://openjfx.io/openjfx-docs/#IDE-Eclipse
			Probleme mit fehlenden Sources:
				https://stackoverflow.com/questions/54278159/javafx-11-in-netbeans-10-with-maven-has-no-sources-javadocs
				https://stackoverflow.com/questions/52144931/how-to-add-javafx-runtime-to-eclipse-in-java-11 
			-->
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.8</version>
				<configuration>
					<!-- Use the following line to execute via Maven triggered from Eclipse: https://openjfx.io/openjfx-docs/#maven -->
					<!--executable>/Users/johannesmeier/.sdkman/candidates/java/21.0.3-tem/bin/java</executable-->
					<mainClass>picturegallery.MainApp</mainClass>
				</configuration>
			</plugin>
    
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<fork>true</fork> <!-- required to activate the following compilerArgs! -->
					<!-- For Java 9+, access to modules must be enabled explicitly
					https://github.com/controlsfx/controlsfx/wiki/Using-ControlsFX-with-JDK-9-and-above
					https://nipafx.dev/maven-on-java-9/
					https://github.com/controlsfx/controlsfx/blob/9.0.0/build.gradle#L1
					https://github.com/controlsfx/controlsfx/issues/1100
					-->
					<compilerArgs>
						<arg>-version</arg>
						<arg>--add-exports</arg>
						<arg>javafx.base/com.sun.javafx.runtime=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>javafx.graphics/com.sun.javafx.css=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</arg>
						<arg>--add-exports</arg>
						<arg>javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</arg>
						<arg>--add-exports</arg>
						<arg>javafx.base/com.sun.javafx.collections=ALL-UNNAMED</arg>
					</compilerArgs>
					<!-- the following approaches failed: this is ignored! -->
					<!--argLine>fail</argLine-->
					<!--add-exports>javafx.base/com.sun.javafx.runtime=ALL-UNNAMED</add-exports-->
				</configuration>
			</plugin>

			<!-- ensures licence headers in Java source files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<verbose>false</verbose>
				</configuration>
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<licenseName>gpl_v3</licenseName>
							<roots>
								<root>src/main/java</root>
								<root>src-gen/main/java</root>
								<root>src/test/java</root>
							</roots>
							<inceptionYear>2016</inceptionYear>
							<organizationName>Johannes Meier</organizationName>
							<copyrightOwners>Johannes Meier</copyrightOwners>
							<emptyLineAfterHeader>true</emptyLineAfterHeader>
							<canUpdateCopyright>true</canUpdateCopyright>
							<canUpdateDescription>true</canUpdateDescription>
							<canUpdateLicense>true</canUpdateLicense>
							<processStartTag>BEGIN-LICENSE</processStartTag>
							<processEndTag>END-LICENSE</processEndTag>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>


	<dependencies>
		<!-- Licence information
		https://www.gnu.org/licenses/gpl-faq.html
		Java: https://www.gnu.org/licenses/lgpl-java.html
		Compatibility: https://www.gnu.org/licenses/license-list.html
		-->

		<!-- JavaFX -->
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
		<dependency>
			<!-- Licence: GPLv2+CE (OK) -->
		    <groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<!-- Licence: The 3-Clause BSD License (OK) -->
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.1.2</version> <!-- previously used versions: 11.1.0, 8.40.12 -->
		</dependency>

		<!-- Apache Commons -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<!-- Licence: Apache License 2.0 (OK) -->
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.12.0</version>
		</dependency>
		<!--dependency> old: updated due to resolve conflict/newer version used by Apache Tika!
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency-->
		<!-- TODO: wird hier eine Dependency rausgefiltert?? https://github.com/yasserg/crawler4j/issues/311 -->
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>

		<!-- Special Functionality -->
		<!-- https://mvnrepository.com/artifact/org.apache.tika/tika-core -->
		<!--dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${apache.tika.version}</version>
		</dependency-->
		<!-- https://mvnrepository.com/artifact/org.apache.tika/tika-parsers -->
		<dependency>
			<!-- Licence: Apache License 2.0 (OK) -->
			<groupId>org.apache.tika</groupId>
			<!--artifactId>tika-parsers</artifactId-->
			<artifactId>tika-core</artifactId>
			<version>${apache.tika.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers-standard-package</artifactId>
			<version>${apache.tika.version}</version>
		</dependency>

		<!-- EMF stuff -->

		<!-- https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.ecore -->
		<dependency>
			<!-- Licence: Eclipse Public License 1.0 (OK in this direction) -->
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
			<version>2.11.1-v20150805-0538</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.common -->
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
			<version>2.11.0-v20150805-0538</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.edit -->
		<dependency>
		    <groupId>org.eclipse.emf</groupId>
		    <artifactId>org.eclipse.emf.edit</artifactId>
		    <version>2.12.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.emf/org.eclipse.emf.ecore.xmi -->
		<dependency>
		    <groupId>org.eclipse.emf</groupId>
		    <artifactId>org.eclipse.emf.ecore.xmi</artifactId>
		    <version>2.12.0</version>
		</dependency>

		<!-- Image Processing -->
		<dependency>
			<!-- https://github.com/pragone/jphash -->
			<!-- Licence: (L)GPL (OK) -->
			<groupId>com.pragone</groupId>
			<artifactId>jpHash</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<!-- Licence: Eclipse Public License 1.0 (OK in this direction) -->
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.12</version>
		    <scope>test</scope>
		</dependency>

	</dependencies>

</project>
